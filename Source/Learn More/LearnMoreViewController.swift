//
// MoleMapper
//
// Copyright (c) 2017-2022 OHSU. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//
// 1.  Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
//
// 2.  Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation and/or
// other materials provided with the distribution.
//
// 3.  Neither the name of the copyright holder(s) nor the names of any contributors
// may be used to endorse or promote products derived from this software without
// specific prior written permission. No license is granted to the trademarks of
// the copyright holders even if such marks are included in this software.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class LearnMoreViewController: UITableViewController {
    
    // MARK: - Properties
    var interactor: LearnMoreBusinessLogic?
    var router: (NSObjectProtocol & LearnMoreRoutingLogic)?
    
   
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = LearnMoreInteractor()
        let router = LearnMoreRouter()
        viewController.interactor = interactor
        viewController.router = router
        router.viewController = viewController
    }
    
    private func configureNavigationBar() {
        navigationItem.titleView = UIImageView(image: #imageLiteral(resourceName: "moleMapperLogo"))
    }
 
    // MARK: View lifecycle
    override func loadView() {
        super.loadView()
        let showNib = UINib(nibName: "ShowTableViewCell", bundle: nil)
        tableView.register(showNib, forCellReuseIdentifier: CellType.showCell.rawValue)
        let switchNib = UINib(nibName: "SwitchTableViewCell", bundle: nil)
        tableView.register(switchNib, forCellReuseIdentifier: CellType.switchCell.rawValue)
        let headerNib = UINib(nibName: "HeaderTableViewCell", bundle: nil)
        tableView.register(headerNib, forCellReuseIdentifier: CellType.headerCell.rawValue)
        // Get rid of extra lines
        tableView.tableFooterView = UIView(frame: CGRect.zero)
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setup()

        let request = LearnMore.InitModel.Request(tableView: tableView, cellDelegate: self)
        interactor?.initModel(request: request)
        configureNavigationBar()
        tableView.separatorInset = UIEdgeInsets.zero
        tableView.separatorColor = UIColor.mmBlue
    }
}

extension LearnMoreViewController: CellDelegate {
    func showScene(actionID: String) {
        guard let action = LearnMoreActionIDs(rawValue: actionID) else { return }
        switch action {
        case LearnMoreActionIDs.showWOM:
            router?.routeToWarOnMelanoma()

        case LearnMoreActionIDs.showSwitchPhones:
            let text = NSMutableAttributedString.getAttributedText(fromFile: "switch_phones")
            let info = RTFPacket(topic: "Switching Phones", attributedText: text)
            router?.routeToRTFViewer(contents: info)
            
        case LearnMoreActionIDs.showSupport:
            let text = NSMutableAttributedString.getAttributedText(fromFile: "support")
            let info = RTFPacket(topic: "Support", attributedText: text)
            router?.routeToRTFViewer(contents: info)
            
        case LearnMoreActionIDs.showPolicy:
            router?.routeToPDFViewer(pdfName: "privacyPolicy_2016_05_27")
            
        case LearnMoreActionIDs.showVideos:
            router?.routeToVideos()
            
        case LearnMoreActionIDs.showAcknowledgements:
            let text = NSMutableAttributedString.getAttributedText(fromFile: "acknowledgements")
            let info = RTFPacket(topic: "Acknowledgements", attributedText: text)
            router?.routeToRTFViewer(contents: info)
            
        case LearnMoreActionIDs.showLicense:
            let text = NSMutableAttributedString.getAttributedText(fromFile: "license")
            let info = RTFPacket(topic: "Licenses", attributedText: text)
            router?.routeToRTFViewer(contents: info)
        }
    }

    func updateBoolean(actionID: String, flag: Bool) {

    }
}
